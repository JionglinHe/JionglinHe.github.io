C51 COMPILER V9.51   ADCKEYPAD                                                             09/08/2019 13:51:48 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE ADCKEYPAD
OBJECT MODULE PLACED IN ..\Hex\AdcKeyPad.obj
COMPILER INVOKED BY: E:\keil5\Keil\C51\BIN\C51.EXE ..\..\..\GetUserInput\Key\AdcKeyPad.c OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\..\..\OSD;..\..\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..
                    -\LCD Pannels;..\..\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key
                    -;..\..\..\GetUserInput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\.
                    -.\Device driver\Flash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\De
                    -vice driver\Kt0803l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\AdcKeyPad.lst) OBJECT(..\
                    -Hex\AdcKeyPad.obj)

line level    source

   1          /*******************************************************************************
   2          *Copyright (C) 2005 深圳艾科创新有限公司产品应用一部
   3          * All rights reserved.
   4          
   5          *File name: 　 AdcKeyPad.c        
   6          *Version:      1.0
   7          *update:       2011-12-08
   8          *Description:
   9                             此文件是对ADC 按键的采集与处理。
  10          
  11          *History:  Jordan.chen   2011/12/08    1.0    build  this  moudle
  12          ******************************************************************************/
  13          #define _ADC_KEY_PAD_C_
  14          
  15          #include "DataType.h"
  16          #include "systemConfig.h"
  17          #include "global.h"
*** WARNING C245 IN LINE 12 OF E:\keil5\Keil\C51\Inc\intrins.h: unknown #pragma, line ignored
*** ERROR C263 IN LINE 36 OF E:\keil5\Keil\C51\Inc\intrins.h: save/restore: stack overflow/underflow
  18          #include "MsgMap.h"
  19          #include "Debug.h"
  20          #include "AdcKeyPad.h"
  21          #include "AMT_Reg.h"
  22          #include "AMT_Drv.h"
  23          
  24          
  25          #ifdef KeyDetectEn 
  26          
  27          
  28          /*************************************************************************
  29          name:    GetBestAdcKeyVal(UCHAR* AdcBuf, UCHAR Length)
  30          input:   AdcBuf  //需滤波的数据指针。
  31                   Length  //需滤波的数据长度。
  32          output:  返回平均数据平均滤波后的数据。
  33          update： 2011-12-07
  34          state：  try out
  35          description: 返回平均数据平均滤波后的数据。
  36          
  37          history: yshuizhou   2011/12/20    0.2    build  this  function
  38          *************************************************************************/
  39          UINT POS_GetBestAdcKeyVal( UINT * AdcBuf, UCHAR Length)
  40          {
  41   1              UCHAR XDATA i,j,index;
  42   1              UINT XDATA s_offset1 = 0,s_offset2 = 0;
  43   1              
  44   1               for(i=0; i<Length; i++)
  45   1               {
  46   2                  s_offset1 += Abs(AdcBuf[i], AdcBuf[0]);
  47   2               }
C51 COMPILER V9.51   ADCKEYPAD                                                             09/08/2019 13:51:48 PAGE 2   

  48   1              index = 0;
  49   1              for(i=1; i<Length; i++)
  50   1              {
  51   2                  for(j=0; j<Length;j++)
  52   2                  {
  53   3                      s_offset2 += Abs(AdcBuf[i], AdcBuf[j]);
  54   3                  }
  55   2                  if(s_offset1 > s_offset2)
  56   2                  {
  57   3                      s_offset1 = s_offset2;
  58   3                          index = i;
  59   3                  }
  60   2                  s_offset2 = 0;      
  61   2              }       
  62   1              return AdcBuf[index];
  63   1      }
  64          
  65          
  66          /*************************************************************************
  67          name:    FilterAdcKeyVal(UINT * AdcValueBuf,UCHAR len)
  68          input:   AdcValueBuf、len。
  69          output:  返回平均数据平均滤波后的数据。
  70          update： 2011-11-28
  71          state：  try out
  72          description:  这个函数是ADC类型的按键滤波函数，经过限副滤波返回相应的按键值。 
  73          
  74          history: yshuizhou   2011/12/20    0.2    build  this  function
  75          *************************************************************************/
  76          UINT POS_FilterAdcKeyVal(UINT * AdcValueBuf,UCHAR len)
  77          {    
  78   1      
  79   1               UCHAR XDATA  i,j;
  80   1               UINT  XDATA CurrentKey = NULL_KEY;
  81   1               FLAG  Keyok = TRUE;
  82   1               
  83   1              for(i=0;i<(len-1);i++)
  84   1              {
  85   2                      for(j=i+1;j<len;j++)
  86   2                       {
  87   3                               if(Abs(AdcValueBuf[i],AdcValueBuf[j]) > 13)   //相邻两次ADC 采集电压不能超过0.1V
  88   3                               {
  89   4                                      Keyok = FALSE;
  90   4                                      break;
  91   4                               }
  92   3                       }
  93   2                      if(!Keyok)
  94   2                      {
  95   3                         break;
  96   3                      }
  97   2          }
  98   1              
  99   1              if(Keyok)
 100   1              {
 101   2                   CurrentKey = POS_GetBestAdcKeyVal(AdcValueBuf,len);
 102   2                       CurrentKey = setFlg(CurrentKey,KeyOkFlg);
 103   2              }
 104   1          else
 105   1          {
 106   2                       CurrentKey = clrFlg(CurrentKey,KeyOkFlg);
 107   2          }
 108   1              return(CurrentKey);             
 109   1              
C51 COMPILER V9.51   ADCKEYPAD                                                             09/08/2019 13:51:48 PAGE 3   

 110   1      }
 111          
 112          
 113          
 114          /*************************************************************************
 115          name:    ReleaseAdcKey(UINT AdcKeyVal)
 116          input:   AdcKeyVal
 117          output:  NULL_KEY
 118          update： 2011-12-07
 119          state：  try out
 120          description: ADC按键释放，执行相关的操作。
 121          
 122          history: yshuizhou   2011/12/07    0.2    build  this  function
 123          *************************************************************************/
 124          KeyInfor POS_ReleaseAdcKey(UINT AdcKeyVal)
 125          {
 126   1          KeyInfor XDATA tmpKey = {NULL_KEY,MSG_NULL,NULL_TIME,KEYRELEASE};
 127   1               
 128   1          if((readFlg(AdcKeyVal,AdcChannelBit)>>12) == g_ucPreChannel)
 129   1          {
 130   2            //printfStr("Release Adc Key");
 131   2                CurrentKey.KeyVal = NULL_KEY;
 132   2                
 133   2                if(CurrentKey.KeyVal != PreKey.KeyVal)
 134   2                {
 135   3                   tmpKey.KeyVal = PreKey.KeyVal;
 136   3                       tmpKey.Holdtime = CurrentKey.Holdtime;
 137   3                       tmpKey.Status = KEYPRESS;
 138   3                }
 139   2                CurrentKey.Holdtime = NULL_TIME;
 140   2                PreKey.KeyVal = NULL_KEY;
 141   2          }
 142   1              return tmpKey;
 143   1      }
 144          
 145          
 146          
 147          /***********************************************************
 148          *name:     GetAdcKeyValue(void)
 149          *input:    non
 150          *return:   返回当前通道采集到得按键值。
 151          *update:   2011-12-22
 152          *state:   try out
 153          *description:   
 154                   这个函数定时获取ADC各个通道的按键值。 
 155          
 156                   
 157          *history:yshuizhou   2011/12/20    0.2    build  this  function 
 158          ************************************************************/
 159          KeyInfor POS_GetAdcKeyValue(void)
 160          {   
 161   1          static UCHAR    CODE  ChannelBuf[] = ADC_CH_LIST;
 162   1              static UINT     XDATA AdcKeyValBuf[] = {0XFFFF,0XFFFF,0XFFFF,0XFFFF};
 163   1          static UCHAR    XDATA AdcChannel = 0;
 164   1              static UCHAR    XDATA Index = 0;        
 165   1              KeyInfor XDATA tmpKey = {NULL_KEY,MSG_NULL,NULL_TIME,KEYRELEASE};
 166   1              UINT  XDATA CurrentAdcVal;
 167   1          
 168   1              
 169   1          AdcKeyValBuf[Index] = POS_EnableChipAdc(ChannelBuf[AdcChannel])>>4;
 170   1              Index++;
 171   1              
C51 COMPILER V9.51   ADCKEYPAD                                                             09/08/2019 13:51:48 PAGE 4   

 172   1              if(Index >= (sizeof(AdcKeyValBuf)/2)) //note:该数组类型为int 
 173   1              {  
 174   2                 Index = 0; 
 175   2                 CurrentAdcVal = POS_FilterAdcKeyVal(AdcKeyValBuf,sizeof(AdcKeyValBuf)/2);
 176   2                 CurrentAdcVal |= (((UINT)(ChannelBuf[AdcChannel]))<<12);//添加通道信息。
 177   2      
 178   2                 if(readFlg(CurrentAdcVal, KeyOkFlg) == KeyOkFlg)
 179   2                 {    
 180   3                         #if TP1_ADC
                                 printf("TP1_ADC >> the KeyValue is %x:\r\n",clrFlg(CurrentAdcVal , KeyOkFlg));                                
                         #endif
 183   3      
 184   3                         #if hw_upResistance
 185   3                     if((CurrentAdcVal &0X00FF) >=0X00F0) // 弹起状态   (上拉接法)
 186   3                     #endif
 187   3                                 
 188   3                         #if hw_downResistance
                                 if((CurrentAdcVal &0X00FF) == 0X0000) // 弹起状态 (下拉接法)
                                 #endif
 191   3                         {
 192   4                                      AdcChannel++;
 193   4      
 194   4                                      if(AdcChannel >= (sizeof(ChannelBuf))) 
 195   4                                      {
 196   5                                        AdcChannel = 0;
 197   5                                      }
 198   4                                      return (POS_ReleaseAdcKey(clrFlg(CurrentAdcVal, KeyOkFlg)));
 199   4                 }
 200   3                         else
 201   3                         {
 202   4                             CurrentKey.KeyVal = clrFlg(CurrentAdcVal , KeyOkFlg);
 203   4                                 PreKey.KeyVal = clrFlg(CurrentAdcVal , KeyOkFlg);
 204   4                                 
 205   4                                 if(CurrentKey.Holdtime <= 0XFF)
 206   4                                 {
 207   5                                   CurrentKey.Holdtime++;
 208   5                                 }
 209   4                                 
 210   4                                 tmpKey.KeyVal = CurrentKey.KeyVal;
 211   4                     tmpKey.Holdtime = CurrentKey.Holdtime;
 212   4                                 tmpKey.Status = KEYHOLD;
 213   4                                 return tmpKey;
 214   4                 }
 215   3                 }
 216   2              }
 217   1              return tmpKey;
 218   1      }
 219          
 220          #endif   //#ifdef KeyDetectEn 

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
