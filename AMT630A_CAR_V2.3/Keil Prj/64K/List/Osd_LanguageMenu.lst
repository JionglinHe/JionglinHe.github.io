C51 COMPILER V9.00   OSD_LANGUAGEMENU                                                      06/07/2020 11:05:45 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OSD_LANGUAGEMENU
OBJECT MODULE PLACED IN ..\Hex\Osd_LanguageMenu.obj
COMPILER INVOKED BY: D:\Keil4_ForAMT630A\C51\BIN\C51.EXE ..\..\..\OSD\Osd_LanguageMenu.c BROWSE INCDIR(..\..\..\OSD;..\.
                    -.\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Pannels;..\..
                    -\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\..\GetUserI
                    -nput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device driver\Fl
                    -ash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device driver\Kt0803
                    -l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Osd_LanguageMenu.lst) OBJECT(..\Hex\Osd_Lan
                    -guageMenu.obj)

line level    source

   1          #define _OSD_LANGUAGE_MENU_C_
   2          
   3          
   4          
   5          #include "DataType.h"
   6          #include "SystemConfig.h"
   7          #include "Global.h"
   8          #include "MsgMap.h"
   9          #include "sysWorkPara.h"
  10          #include "sysPower.h" 
  11          #include "videoProc.h"
  12          #include "configLCDPara.h"
  13          #include "Debug.h"
  14          #include "Delay.h"
  15          #include "AMT_REG.H"
  16          #include "AMT_Drv.h"
  17          #include "AMT_MCU.h"
  18          #include "Osd_Menu.h"
  19          #include "Osd_MenuPage.h"
  20          
  21          
  22          
  23          SWORD GetLanguageVal(void);
  24          
  25          
  26          
  27          /*****************************************************************
  28                                      Text
  29          *****************************************************************/
  30          UCHAR* CODE LanguageMenuStr[]=
  31          {
  32             "LANGUAGE",
  33             "LANGUE",
  34             "LANGUA",
  35             "IDIOMA",
  36             "SPRACHE",
  37             "IDIOMA",
  38             "TAAL",
  39             "\x01F\x00D\x01C\x010",
  40             "#\x00E#\x00F", 
  41             "#\x00F#\x085", 
  42             "&\x0A&\x07", //korea
  43             "\x00C\x00D\x00E\x010",
  44             "J\x006Z\x015\x010",
  45             "DIL"
  46          };
  47          
  48          
  49          UCHAR* CODE LanguageStr[]=
C51 COMPILER V9.00   OSD_LANGUAGEMENU                                                      06/07/2020 11:05:45 PAGE 2   

  50          {
  51            "ENGLISH",
  52            "FRANCAIS",
  53            "ITALIANO",
  54            "ESPA\x085OL",
  55            "DEUTSCH",
  56            "PORTUGU\x073SE",
  57            "ENGELS",
  58            "\x024\x015\x025\x025\x010\x00E\x00F",
  59            "#\x059#\x043#\x05A#\x05B", 
  60            "#\x083#\x084#\x085", 
  61            " &\x0D&\x0E&\x07", //korea
  62            "\x008\x029\x011\x00A\x007\x025\x0B8\x010\x013",
  63            "POLSKI",
  64            "T\x0A8RK"
  65          };
  66          
  67          
  68          
  69          
  70          /*****************************************************************
  71                                      String
  72          *****************************************************************/
  73          UCHAR * CODE LanguageMenu_TitelStr(void)
  74          {
  75   1          return LanguageMenuStr[GetLanguageVal()];
  76   1      }
  77          
  78          
  79          UCHAR * CODE DispLanguageStr(void)
  80          {     
  81   1            return LanguageStr[GetLanguageVal()];  
  82   1      }
  83          
  84          
  85          
  86          /*****************************************************************
  87                                     Function
  88          *****************************************************************/
  89          AdjustType LanguageMenu_CheckCondition(void)
  90          {
  91   1              AdjustType XDATA adjust = {0,0,0};
  92   1              adjust.Flags |= osdVisible;
  93   1              //printfStr("LanguageMenu_CheckCondition");
  94   1              return adjust;
  95   1      }
  96          
  97          
  98          
  99          
 100          
 101          BOOL LanguageMenuItem_DrawStyle(void)
 102          {
 103   1          //printfStr("LanguageMenuItem_DrawStyle");
 104   1              OsdWndClear(0X00, 0X00, 0X00, 0X11);
 105   1              OsdWndClear(0X01, 0X00, 0X01, 0X11);
 106   1          return 0;
 107   1      }
 108          
 109          
 110          SWORD GetLanguageVal(void)
 111          {
C51 COMPILER V9.00   OSD_LANGUAGEMENU                                                      06/07/2020 11:05:45 PAGE 3   

 112   1           //printfStr("GetLanguageVal");
 113   1           return g_sysSetting.Osd.curlanguage;
 114   1      }
 115          
 116          
 117          BOOL AdjustLanguage(UCHAR opratComd)
 118          {
 119   1              if(opratComd == COMD_IncValue)
 120   1          {     
 121   2                        if(g_sysSetting.Osd.curlanguage <MAX_LANG)
 122   2                        {
 123   3                            g_sysSetting.Osd.curlanguage++;
 124   3                        } 
 125   2                        else
 126   2                        {
 127   3                               g_sysSetting.Osd.curlanguage = MIN_LAG;
 128   3                        }
 129   2                        //printf("curlanguage Inc Value ++ = %d", g_sysSetting.Osd.curlanguage);
 130   2          }
 131   1              if(opratComd == COMD_DecValue)
 132   1              {
 133   2                        if(g_sysSetting.Osd.curlanguage>MIN_LAG)
 134   2                        {
 135   3                            g_sysSetting.Osd.curlanguage--;
 136   3                        } 
 137   2                        else
 138   2                        {
 139   3                               g_sysSetting.Osd.curlanguage = MAX_LANG;
 140   3                        }
 141   2                       //printf("curlanguage Dec Value -- =%d",g_sysSetting.Osd.curlanguage);           
 142   2              }
 143   1              return 1;
 144   1      }
 145          
 146          
 147          BOOL ExectLanguage(void)
 148          {
 149   1         //printfStr("ExectLanguage");
 150   1         OsdWndClear(0X00, 0X00, 0X00, 0X11);
 151   1         OsdWndClear(0X01, 0X00, 0X01, 0X11);
 152   1         DrawOsdTitel(CurrentMenuItem.ItemTitels,osdDraw);
 153   1         return 1;
 154   1      }
 155          
 156          
 157          /*****************************************************************
 158                                    Item value table
 159          *****************************************************************/
 160          
 161          
 162          
 163          /*****************************************************************
 164                                    Item Icon table
 165          *****************************************************************/
 166          
 167          
 168          
 169          
 170          /*****************************************************************
 171                                   Item  Titel table
 172          *****************************************************************/
 173          TitelType CODE LanguageMenuItem_LanguageTitelTab[]=
C51 COMPILER V9.00   OSD_LANGUAGEMENU                                                      06/07/2020 11:05:45 PAGE 4   

 174          {
 175                  //{0,5,RED,GRAY,RED,GRAY,DWT_Text,LanguageMenu_TitelStr,0},
 176              {0,1,RED,GRAY,RED,GRAY,DWT_Text,DispLanguageStr,osdEnd},
 177          };
 178          
 179          /*****************************************************************
 180                                    Menu Icon table
 181          *****************************************************************/
 182          
 183          
 184          
 185          /*****************************************************************
 186                                   Menu  Titel table
 187          *****************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =    291    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
