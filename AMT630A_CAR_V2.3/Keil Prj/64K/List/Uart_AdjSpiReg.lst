C51 COMPILER V9.00   UART_ADJSPIREG                                                        06/07/2020 11:05:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART_ADJSPIREG
OBJECT MODULE PLACED IN ..\Hex\Uart_AdjSpiReg.obj
COMPILER INVOKED BY: D:\Keil4_ForAMT630A\C51\BIN\C51.EXE ..\..\..\LCD Pannels\Uart_AdjSpiReg.c BROWSE INCDIR(..\..\..\OS
                    -D;..\..\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Pannels
                    -;..\..\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\..\Ge
                    -tUserInput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device dri
                    -ver\Flash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device driver\
                    -Kt0803l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Uart_AdjSpiReg.lst) OBJECT(..\Hex\Uar
                    -t_AdjSpiReg.obj)

line level    source

   1          
   2          #include "DataType.h"
   3          #include "systemConfig.h"
   4          #include "ConfigLcdPara.h"
   5          #include "Global.h"
   6          #include "Debug.h"
   7          #include "Mcu.h"
   8          #include "AMT_Mcu.h"
   9          #include "AMT_Drv.h"
  10          
  11          
  12          #ifdef SpiInitPannelEn
              #ifdef SpiAdjRegEn
              
              UCHAR   g_ucSpiRecStep = 0; 
              FLAG    g_bSpiRec = 0; 
              UINT    g_uiDataRec = 0; 
              UINT    g_uiAddressRec = 0; 
               
              void POS_AdjustSpiReg(void)
              {   
              
                  if(g_bSpiRec)  
                  {
                       while(1)
                          { 
                              if(g_bSpiRec) 
                              {  
                                 printf("the g_uiAddressRec is %x",g_uiAddressRec);
                                         printf("the g_uiDataRec is %x",g_uiDataRec);
              
                                         /*
                                         此函数需要根据不同屏SPI初始化替换。
                                         */
                                 WriteTM035KDH08Reg(g_uiAddressRec,g_uiDataRec);
                                         g_bSpiRec = 0;
                                         g_uiAddressRec = 0;
                                         g_uiDataRec = 0;
                              }
                          }
                  }
              }
              
              
              void POS_RecUartSpiInfor(void) 
              {
                 UCHAR  tmpRec = 0;
              
                 if(RI)
C51 COMPILER V9.00   UART_ADJSPIREG                                                        06/07/2020 11:05:34 PAGE 2   

                 {
                   tmpRec = SBUF;
                   RI = 0;
                       
                       switch(g_ucSpiRecStep)
                       {
                         case ProtocolData0: 
                                  g_ucSpiRecStep = ProtocolData0;
                                      if(tmpRec == 0x55)
                                  {
                                    g_ucSpiRecStep = ProtocolData1;
                                  }
                                      break;
                                      
                         case ProtocolData1:
                                  if(tmpRec == 0xAA)
                                  {
                                    g_ucSpiRecStep = AddressDataH;
                                  }
                                      else
                                      {
                                        g_ucSpiRecStep = ProtocolData0;
                                      }
                                      break;
                                      
                         case AddressDataH:
                                  g_uiAddressRec = tmpRec*256;
                          g_ucSpiRecStep = AddressDataL;
                                  break;
              
                         case AddressDataL:
                                  g_uiAddressRec += tmpRec;
                                  g_ucSpiRecStep = WriteDataH;
                                      break;
                                      
                         case WriteDataH:
                                  g_uiDataRec = tmpRec*256;
                          g_ucSpiRecStep = WriteDataL;
                                      break;
              
                        case WriteDataL:
                                 g_uiDataRec += tmpRec;
                                 g_bSpiRec = 1;
                         g_ucSpiRecStep = ProtocolData0;
                                 break;
                        
                        default:
                             g_ucSpiRecStep = ProtocolData0;
                                 break;
                       }
                 }
              }
              #endif
              #endif
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.00   UART_ADJSPIREG                                                        06/07/2020 11:05:34 PAGE 3   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
