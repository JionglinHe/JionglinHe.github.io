C51 COMPILER V9.51   UART_ADJSPIREG                                                        09/08/2019 13:51:38 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UART_ADJSPIREG
OBJECT MODULE PLACED IN ..\Hex\Uart_AdjSpiReg.obj
COMPILER INVOKED BY: E:\keil5\Keil\C51\BIN\C51.EXE ..\..\..\LCD Pannels\Uart_AdjSpiReg.c OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\..\..\OSD;..\..\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..
                    -\LCD Pannels;..\..\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key
                    -;..\..\..\GetUserInput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\.
                    -.\Device driver\Flash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\De
                    -vice driver\Kt0803l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Uart_AdjSpiReg.lst) OBJEC
                    -T(..\Hex\Uart_AdjSpiReg.obj)

line level    source

   1          
   2          #include "DataType.h"
   3          #include "systemConfig.h"
   4          #include "ConfigLcdPara.h"
   5          #include "Global.h"
*** WARNING C245 IN LINE 12 OF E:\keil5\Keil\C51\Inc\intrins.h: unknown #pragma, line ignored
*** ERROR C263 IN LINE 36 OF E:\keil5\Keil\C51\Inc\intrins.h: save/restore: stack overflow/underflow
   6          #include "Debug.h"
   7          #include "Mcu.h"
   8          #include "AMT_Mcu.h"
   9          #include "AMT_Drv.h"
  10          
  11          
  12          #ifdef SpiInitPannelEn
              #ifdef SpiAdjRegEn
              
              UCHAR   g_ucSpiRecStep = 0; 
              FLAG    g_bSpiRec = 0; 
              UINT    g_uiDataRec = 0; 
              UINT    g_uiAddressRec = 0; 
               
              void POS_AdjustSpiReg(void)
              {   
              
                  if(g_bSpiRec)  
                  {
                       while(1)
                          { 
                              if(g_bSpiRec) 
                              {  
                                 printf("the g_uiAddressRec is %x",g_uiAddressRec);
                                         printf("the g_uiDataRec is %x",g_uiDataRec);
              
                                         /*
                                         此函数需要根据不同屏SPI初始化替换。
                                         */
                                 WriteTM035KDH08Reg(g_uiAddressRec,g_uiDataRec);
                                         g_bSpiRec = 0;
                                         g_uiAddressRec = 0;
                                         g_uiDataRec = 0;
                              }
                          }
                  }
              }
              
              
              void POS_RecUartSpiInfor(void) 
              {
                 UCHAR  tmpRec = 0;
C51 COMPILER V9.51   UART_ADJSPIREG                                                        09/08/2019 13:51:38 PAGE 2   

              
                 if(RI)
                 {
                   tmpRec = SBUF;
                   RI = 0;
                       
                       switch(g_ucSpiRecStep)
                       {
                         case ProtocolData0: 
                                  g_ucSpiRecStep = ProtocolData0;
                                      if(tmpRec == 0x55)
                                  {
                                    g_ucSpiRecStep = ProtocolData1;
                                  }
                                      break;
                                      
                         case ProtocolData1:
                                  if(tmpRec == 0xAA)
                                  {
                                    g_ucSpiRecStep = AddressDataH;
                                  }
                                      else
                                      {
                                        g_ucSpiRecStep = ProtocolData0;
                                      }
                                      break;
                                      
                         case AddressDataH:
                                  g_uiAddressRec = tmpRec*256;
                          g_ucSpiRecStep = AddressDataL;
                                  break;
              
                         case AddressDataL:
                                  g_uiAddressRec += tmpRec;
                                  g_ucSpiRecStep = WriteDataH;
                                      break;
                                      
                         case WriteDataH:
                                  g_uiDataRec = tmpRec*256;
                          g_ucSpiRecStep = WriteDataL;
                                      break;
              
                        case WriteDataL:
                                 g_uiDataRec += tmpRec;
                                 g_bSpiRec = 1;
                         g_ucSpiRecStep = ProtocolData0;
                                 break;
                        
                        default:
                             g_ucSpiRecStep = ProtocolData0;
                                 break;
                       }
                 }
              }
              #endif
              #endif
 104          

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
