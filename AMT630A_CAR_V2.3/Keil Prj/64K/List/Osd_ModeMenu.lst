C51 COMPILER V9.51   OSD_MODEMENU                                                          09/08/2019 13:51:54 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OSD_MODEMENU
OBJECT MODULE PLACED IN ..\Hex\Osd_ModeMenu.obj
COMPILER INVOKED BY: E:\keil5\Keil\C51\BIN\C51.EXE ..\..\..\OSD\Osd_ModeMenu.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\
                    -OSD;..\..\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Panne
                    -ls;..\..\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\..\
                    -GetUserInput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device d
                    -river\Flash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device drive
                    -r\Kt0803l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Osd_ModeMenu.lst) OBJECT(..\Hex\Osd
                    -_ModeMenu.obj)

line level    source

   1          #define _OSD_MODE_MENU_C_
   2          
   3          
   4          
   5          #include "DataType.h"
   6          #include "SystemConfig.h"
   7          #include "Global.h"
*** WARNING C245 IN LINE 12 OF E:\keil5\Keil\C51\Inc\intrins.h: unknown #pragma, line ignored
*** ERROR C263 IN LINE 36 OF E:\keil5\Keil\C51\Inc\intrins.h: save/restore: stack overflow/underflow
   8          #include "MsgMap.h"
   9          #include "sysWorkPara.h"
  10          #include "sysPower.h" 
  11          #include "videoProc.h"
  12          #include "configLCDPara.h"
  13          #include "Debug.h"
  14          #include "Delay.h"
  15          #include "AMT_REG.H"
  16          #include "AMT_Drv.h"
  17          #include "AMT_MCU.h"
  18          #include "Osd_Menu.h"
  19          #include "Osd_MenuPage.h"
  20          
  21          
  22          
  23          SWORD GetModeVal(void);
  24          
  25          
  26          
  27          /*****************************************************************
  28                                      Text
  29          *****************************************************************/
  30          UCHAR* CODE ModeMenuStr[]=
  31          {
  32              "ZOOM",
  33              "ZOOM",
  34              "ZOOM",
  35              "ZOOM",
  36              "ZOOM",
  37              "ZOOM",
  38              "ZOOM",
  39              "\x015\x009\x00C\x011\x00E\x018\x00C\x013\x00E\x00C",
  40              "#\x02E#\x02F", 
  41              "#\x082#\x069#\x06D",
  42              "&\x02&\x001             ",//korea
  43              "ZOOM",
  44              "ZOOM",
  45              "ZOOM",
  46          };
  47          
C51 COMPILER V9.51   OSD_MODEMENU                                                          09/08/2019 13:51:54 PAGE 2   

  48          
  49          UCHAR* CODE  ModeStr[]=
  50          {
  51              "16:9", 
  52                  " 4:3"
  53          };
  54          
  55          
  56          
  57          /*****************************************************************
  58                                      String
  59          *****************************************************************/
  60          UCHAR * ModeMenu_TitelStr(void)
  61          {
  62   1          return ModeMenuStr[g_sysSetting.Osd.curlanguage];
  63   1      }
  64          
  65          
  66          UCHAR * CODE DispModeStr(void)
  67          {
  68   1            return ModeStr[GetModeVal()];  
  69   1      }
  70          
  71          
  72          /*****************************************************************
  73                                     Function
  74          *****************************************************************/
  75          AdjustType ModeMenu_CheckCondition(void)
  76          {
  77   1              AdjustType XDATA adjust = {0,0,0};
  78   1              
  79   1              if(ON == g_sysSetting.Factory.scalerswitch)
  80   1              {
  81   2                      adjust.Flags |= osdVisible;
  82   2                      //printfStr("Mode Visibla");
  83   2              }
  84   1              else
  85   1              {
  86   2                  adjust.Flags |= osdInvisible; 
  87   2                      //printfStr("Mode Invisible");
  88   2              }
  89   1          adjust.XPos= g_sysSetting.Osd.xOffset;
  90   1              adjust.YPos= g_sysSetting.Osd.yOffset;
  91   1              //printfStr("ModeMenu_CheckCondition");
  92   1              return adjust;
  93   1      }
  94          
  95          
  96          
  97          
  98          
  99          BOOL ModeMenuItem_DrawStyle(void)
 100          {
 101   1          //printfStr("ModeMenuItem_DrawStyle");
 102   1              OsdWndClear(0X00, 0X00, 0X00, 0X11);
 103   1              OsdWndClear(0X01, 0X00, 0X01, 0X11);
 104   1          return 0;
 105   1      }
 106          
 107          
 108          SWORD GetModeVal(void)
 109          {
C51 COMPILER V9.51   OSD_MODEMENU                                                          09/08/2019 13:51:54 PAGE 3   

 110   1           //printf("GetModeVal= %x",g_sysSetting.Disp.zoomMode);
 111   1               return g_sysSetting.Disp.zoomMode;
 112   1      }
 113          
 114          
 115          BOOL AdjustMode(UCHAR opratComd)
 116          {
 117   1          if((opratComd == COMD_IncValue) ||(opratComd == COMD_DecValue)||(opratComd == COMD_SelMode))  
 118   1          {     
 119   2             (g_sysSetting.Disp.zoomMode == DISP_16_9)?(g_sysSetting.Disp.zoomMode = DISP_4_3):(g_sysSetting.Dis
             -p.zoomMode = DISP_16_9);
 120   2                 //printf("AdjustMode Value = %d",g_sysSetting.Disp.zoomMode);
 121   2          }
 122   1              return 1;
 123   1      }
 124          
 125          
 126          BOOL ExectMode(void)
 127          {
 128   1         ConfigDispZoomDynPara(g_sysSetting.Disp.zoomMode); 
 129   1         return 1;
 130   1      }
 131          
 132          
 133          /*****************************************************************
 134                                    Item value table
 135          *****************************************************************/
 136          DrawOptionType CODE Option_Mode[]=
 137          {
 138              {0,7,RED,GRAY,RED,GRAY, GetModeVal,DispModeStr,osdEnd},
 139          };
 140          
 141          
 142          ItemValueType CODE ModeMenuItemVal_Mode[]=
 143          {
 144               {
 145                        NULL,
 146                        NULL,
 147                        Option_Mode,   
 148                        osdEnd,
 149               },
 150          };
 151          
 152          
 153          
 154          /*****************************************************************
 155                                    Item Icon table
 156          *****************************************************************/
 157          
 158          
 159          
 160          
 161          /*****************************************************************
 162                                   Item  Titel table
 163          *****************************************************************/
 164          TitelType CODE ModeMenuItem_ModeTitelTab[]=
 165          {
 166             {0,1,RED,GRAY,RED,GRAY,DWT_Text,ModeMenu_TitelStr,osdEnd},
 167          };
 168          
 169          
 170          /*****************************************************************
C51 COMPILER V9.51   OSD_MODEMENU                                                          09/08/2019 13:51:54 PAGE 4   

 171                                    Menu Icon table
 172          *****************************************************************/
 173          
 174          
 175          
 176          /*****************************************************************
 177                                   Menu  Titel table
 178          *****************************************************************/

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
