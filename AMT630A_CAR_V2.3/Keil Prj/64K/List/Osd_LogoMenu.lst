C51 COMPILER V9.00   OSD_LOGOMENU                                                          06/07/2020 11:05:40 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OSD_LOGOMENU
OBJECT MODULE PLACED IN ..\Hex\Osd_LogoMenu.obj
COMPILER INVOKED BY: D:\Keil4_ForAMT630A\C51\BIN\C51.EXE ..\..\..\OSD\Osd_LogoMenu.c BROWSE INCDIR(..\..\..\OSD;..\..\..
                    -\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Pannels;..\..\..\
                    -LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\..\GetUserInput
                    -\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device driver\Flash;
                    -..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device driver\Kt0803l;..
                    -\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Osd_LogoMenu.lst) OBJECT(..\Hex\Osd_LogoMenu.ob
                    -j)

line level    source

   1          #define _OSD_LOGO_MENU_C_
   2          
   3          
   4          
   5          #include "DataType.h"
   6          #include "SystemConfig.h"
   7          #include "Global.h"
   8          #include "MsgMap.h"
   9          #include "sysWorkPara.h"
  10          #include "sysPower.h" 
  11          #include "videoProc.h"
  12          #include "configLCDPara.h"
  13          #include "Debug.h"
  14          #include "Delay.h"
  15          #include "AMT_REG.H"
  16          #include "AMT_Drv.h"
  17          #include "AMT_MCU.h"
  18          #include "Flash.h"
  19          #include "Osd_Menu.h"
  20          #include "Osd_MenuPage.h"
  21          #include "Osd_LogoFontDat.h"
  22          #include "Osd_LogoList.h"
  23          
  24          
  25          #ifdef LogoEn
              /*****************************************************************
                                         Function
              *****************************************************************/
              AdjustType LogoMenu_CheckCondition (void)
              {
                      AdjustType XDATA adjust = {0,0,0};
              
                      adjust.Flags |= osdVisible;
                      
                      //printfStr("LogoMenu_CheckCondition");
                      return adjust;
              }
              
              
              void InitLogoMenuDat(void)
              {  
              
                  UINT XDATA IconSize = 0x00;
                      UCHAR XDATA BitMapPattleSize = 0x00;
                      UINT XDATA FontRamNum = 0x00;
                      ULONG XDATA StartAddr = 0x00;
                  UCHAR  XDATA  LogoBitMapPattle[32]={0x00};
              
                      printfStr("InitLogoMenuDat");
C51 COMPILER V9.00   OSD_LOGOMENU                                                          06/07/2020 11:05:40 PAGE 2   

                      FontRamNum = LogoList[g_sysSetting.Logo.logoID].FontRamNum;
                      StartAddr = FLASH_LOGO_ADDR + LogoList[g_sysSetting.Logo.logoID].StarAddr;
                      
                      if(LogoList[g_sysSetting.Logo.logoID].ColorMode)
                      {  
                         IconSize = 0xB0;
                         BitMapPattleSize = 0x20;
                         OsdConfigDispMode(OSD_BITMAP_MODE,OSD_DISP_NORMAL);  
                         ReadFlashSysPara(StartAddr, (UCHAR *)&LogoBitMapPattle, 32); 
                      }
                      else
                      {
                        IconSize = 0x30;
                        BitMapPattleSize = 0x01;
                        OsdConfigDispMode(OSD_MODE,OSD_DISP_NORMAL);  
                        
                      }
                  OsdConfigBitmapStarIndex(LOGOBITMAP_SATRT_INDEX);
                  OsdConfigBitmapPalette(LogoBitMapPattle);
                  DMALoadFontRam(StartAddr+BitMapPattleSize,LOGOBITMAP_SATRT_INDEX<<4,IconSize*FontRamNum);  
              
              }
              
              
              #endif
  75          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
