C51 COMPILER V9.51   OSD_VOLUMEMENU                                                        09/08/2019 13:51:54 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OSD_VOLUMEMENU
OBJECT MODULE PLACED IN ..\Hex\Osd_VolumeMenu.obj
COMPILER INVOKED BY: E:\keil5\Keil\C51\BIN\C51.EXE ..\..\..\OSD\Osd_VolumeMenu.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\.
                    -.\OSD;..\..\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Pan
                    -nels;..\..\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\.
                    -.\GetUserInput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device
                    - driver\Flash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device dri
                    -ver\Kt0803l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Osd_VolumeMenu.lst) OBJECT(..\Hex
                    -\Osd_VolumeMenu.obj)

line level    source

   1          #define _OSD_VOLUME_MENU_C_
   2          
   3          
   4          
   5          #include "DataType.h"
   6          #include "SystemConfig.h"
   7          #include "Global.h"
*** WARNING C245 IN LINE 12 OF E:\keil5\Keil\C51\Inc\intrins.h: unknown #pragma, line ignored
*** ERROR C263 IN LINE 36 OF E:\keil5\Keil\C51\Inc\intrins.h: save/restore: stack overflow/underflow
   8          #include "MsgMap.h"
   9          #include "sysWorkPara.h"
  10          #include "sysPower.h" 
  11          #include "videoProc.h"
  12          #include "configLCDPara.h"
  13          #include "Debug.h"
  14          #include "Delay.h"
  15          #include "AMT_REG.H"
  16          #include "AMT_Drv.h"
  17          #include "AMT_MCU.h"
  18          #include "Osd_Menu.h"
  19          #include "Osd_MenuPage.h"
  20          
  21          
  22          
  23          
  24          /*****************************************************************
  25                                      Text
  26          *****************************************************************/
  27          UCHAR* CODE VolumeMenuStr[]=
  28          {
  29              "VOLUME",
  30                  "VOLUME",
  31                  "VOLUME",
  32                  "VOLUME",
  33              "LAUTST\x093RKE",
  34                  "VOLUME",
  35                  "VOLUME",
  36                  "\x00A\x024\x0B7\x012\x010\x0B7\x025\x0B8\x028",
  37                  "#\x056#\x063",
  38                  "#\x056#\x063",
  39                  "VOLUME",
  40                  "VOLUME",
  41                  "VOLUME",
  42                  "VOLUME",
  43          };
  44          
  45          
  46          
  47          
C51 COMPILER V9.51   OSD_VOLUMEMENU                                                        09/08/2019 13:51:54 PAGE 2   

  48          /*****************************************************************
  49                                      String
  50          *****************************************************************/
  51          UCHAR * VolumeMenu_TitelStr(void)
  52          {
  53   1          return VolumeMenuStr[g_sysSetting.Osd.curlanguage];
  54   1      }
  55          
  56          
  57          
  58          /*****************************************************************
  59                                     Function
  60          *****************************************************************/
  61          AdjustType VolumeMenu_CheckCondition(void)
  62          {
  63   1              AdjustType XDATA adjust = {0,0,0};
  64   1      
  65   1              if(ON == g_sysSetting.Factory.volumeswitch)
  66   1              {   
  67   2                      adjust.Flags |= osdVisible;
  68   2                      //printfStr("Volume Visibla");
  69   2              }
  70   1              else
  71   1              {
  72   2                  adjust.Flags |= osdInvisible; 
  73   2                      //printfStr("Volume Invisible");
  74   2              }
  75   1              adjust.XPos= g_sysSetting.Osd.xOffset;
  76   1              adjust.YPos= g_sysSetting.Osd.yOffset;
  77   1              
  78   1              //printfStr("VolumeMenu_CheckCondition");
  79   1              return adjust;
  80   1      }
  81          
  82          
  83          
  84          
  85          BOOL VolumeMenuItem_DrawStyle(void)
  86          {
  87   1          //printfStr("VolumeMenuItem_DrawStyle");
  88   1          OsdWndClear(0X00, 0X00, 0X00, 0X11);
  89   1          return 0;
  90   1      }
  91          
  92          
  93          SWORD GetVolumeVal(void)
  94          {
  95   1           //printfStr("GetVolumeVal");
  96   1           return g_sysSetting.Audio.volVal;
  97   1      }
  98          
  99          
 100          BOOL AdjustVolume(UCHAR opratComd)
 101          {
 102   1          if((opratComd == COMD_IncValue)||(opratComd == COMD_IncVolume))
 103   1          {
 104   2                        if(g_sysSetting.Audio.volVal<MAX_VALUE)
 105   2                        {
 106   3                            g_sysSetting.Audio.volVal++;
 107   3                        } 
 108   2                        //printf("volVal Inc Value ++ = %d",g_sysSetting.Audio.volVal);
 109   2          }
C51 COMPILER V9.51   OSD_VOLUMEMENU                                                        09/08/2019 13:51:54 PAGE 3   

 110   1              if((opratComd == COMD_DecValue)||(opratComd == COMD_DecVolume))
 111   1              {
 112   2                  
 113   2                        if(g_sysSetting.Audio.volVal>0)
 114   2                        {
 115   3                            g_sysSetting.Audio.volVal--;
 116   3                        } 
 117   2                       //printf("volVal Dec Value -- =%d",g_sysSetting.Audio.volVal);
 118   2              }
 119   1              return 1;
 120   1      }
 121          
 122          
 123          BOOL ExectVolume(void)
 124          {
 125   1         //printfStr("ExectVolume");
 126   1         #ifdef AudioCtrlEn
                 #if AUDIO_CTRL == VOLUME_PWM_CTRL
                 CtrlVolumeByPWM(g_sysSetting.Audio.volVal);
                 #endif
                 #endif
 131   1         
 132   1         return 1;
 133   1      }
 134          
 135          
 136          /*****************************************************************
 137                                    Item value table
 138          *****************************************************************/
 139          DrawNumberType CODE Number_Volume[]=
 140          {
 141              {0,14,RED,TRANSPARENCE,RED,TRANSPARENCE, GetVolumeVal,osdDecNum|osdEnd},
 142          };
 143          
 144          DrawGuageType CODE Gugae_Volume[]=
 145          {
 146              {1,0,WHITE,TRANSPARENCE,WHITE,TRANSPARENCE, MAX_VALUE,GetVolumeVal,osdEnd},
 147          };
 148          
 149          
 150          ItemValueType CODE VolumeMenuItemVal_Volume[]=
 151          {
 152               {
 153                        Number_Volume,
 154                        Gugae_Volume,
 155                        NULL,   
 156                        osdEnd,
 157               },
 158          };
 159          
 160          
 161          /*****************************************************************
 162                                    Item Icon table
 163          *****************************************************************/
 164          
 165          
 166          
 167          /*****************************************************************
 168                                   Item  Titel table
 169          *****************************************************************/
 170          TitelType CODE VolumeMenuItem_VolumeTitelTab[]=
 171          {
C51 COMPILER V9.51   OSD_VOLUMEMENU                                                        09/08/2019 13:51:54 PAGE 4   

 172             {0,0,RED,TRANSPARENCE,RED,TRANSPARENCE,DWT_Text,VolumeMenu_TitelStr,osdEnd},
 173          };
 174          
 175          
 176          /*****************************************************************
 177                                    Menu Icon table
 178          *****************************************************************/
 179          
 180          
 181          
 182          /*****************************************************************
 183                                   Menu  Titel table
 184          *****************************************************************/
 185          

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
