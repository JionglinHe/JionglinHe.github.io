C51 COMPILER V9.00   OSD_BTCALLERMENU                                                      06/07/2020 11:05:42 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OSD_BTCALLERMENU
OBJECT MODULE PLACED IN ..\Hex\Osd_BTCallerMenu.obj
COMPILER INVOKED BY: D:\Keil4_ForAMT630A\C51\BIN\C51.EXE ..\..\..\OSD\Osd_BTCallerMenu.c BROWSE INCDIR(..\..\..\OSD;..\.
                    -.\..\OSD\Logo;../../../Inc;../../../UserConfig;../../../ARKLib;../../../UserConfig/Prj config;..\..\..\LCD Pannels;..\..
                    -\..\LCD Pannels\LCD parameter;..\..\..\GetUserInput;..\..\..\GetUserInput\Ir;..\..\..\GetUserInput\Key;..\..\..\GetUserI
                    -nput\GPIO;..\..\..\Device driver\AMT;..\..\..\Device driver\ArkChip;..\..\..\Device driver\Mcu;..\..\..\Device driver\Fl
                    -ash;..\..\..\Device driver\I2C;..\..\..\Device driver\E2prom;..\..\..\Device driver\WT5700;..\..\..\Device driver\Kt0803
                    -l;..\..\..\Device driver\BT;..\..\..\Debug) DEBUG OBJECTEXTEND PRINT(..\List\Osd_BTCallerMenu.lst) OBJECT(..\Hex\Osd_BTC
                    -allerMenu.obj)

line level    source

   1          #define _OSD_BTCALLER_MENU_C_
   2          
   3          
   4          
   5          #include "DataType.h"
   6          #include "SystemConfig.h"
   7          #include "Global.h"
   8          #include "MsgMap.h"
   9          #include "sysWorkPara.h"
  10          #include "sysPower.h" 
  11          #include "videoProc.h"
  12          #include "configLCDPara.h"
  13          #include "Debug.h"
  14          #include "Delay.h"
  15          #include "AMT_REG.H"
  16          #include "AMT_Drv.h"
  17          #include "AMT_MCU.h"
  18          #include "Osd_Menu.h"
  19          #include "Osd_MenuPage.h"
  20          
  21          
  22          #ifdef BTEn
              
              /*****************************************************************
                                          Text
              *****************************************************************/
              
              
              
              
              /*****************************************************************
                                          String
              *****************************************************************/
              
              UCHAR * CODE BTCallerMenu_TitelStr(void)
              {
                  return g_ucCallerIDBuf;
              }
              
              
              
              /*****************************************************************
                                         Function
              *****************************************************************/
              AdjustType BTCallerMenu_CheckCondition (void)
              {
                      AdjustType XDATA adjust = {0,0,0};
                      adjust.Flags |= osdVisible;
                      
C51 COMPILER V9.00   OSD_BTCALLERMENU                                                      06/07/2020 11:05:42 PAGE 2   

                      //printfStr("BTCallerMenu_CheckCondition");
                      return adjust;
              }
              
              
              void SwitchAsciiBuf(UCHAR AsciiBuflen,UCHAR *pAsciiBufData)
              {
                 UCHAR CODE DatBuf[] = {'0','1','2','3','4','5','6','7','8','9'};
                 UCHAR XDATA i;
              
                 for(i= 0;i<AsciiBuflen;i++)
                 {   
                     if((*(pAsciiBufData+i) >= 0x30)&&(*(pAsciiBufData+i) <= 0x39))
                     {
                        g_ucCallerIDBuf[i] = DatBuf[*(pAsciiBufData+i)-0x30];
                     }
                         else
                         {
                           g_ucCallerIDBuf[i]=' ';
                         }
                         //printf("g_ucCallerIDBuf[i] is %x",g_ucCallerIDBuf[i]);
                 }
                 g_ucCallerIDBuf[i]='\0';
              }
              
              
              BOOL BTCallerMenuItem_DrawStyle(void)
              {
                      //printfStr("BTCallerMenuItem_DrawStyle");
                      SwitchAsciiBuf(g_ucCallerIDLen,g_ucCallerIDAsciiBuf);
                      return 0;
              }
              
              /*****************************************************************
                                        Item value table
              *****************************************************************/
              
              
              
              /*****************************************************************
                                        Item Icon table
              *****************************************************************/
              
              
              
              /*****************************************************************
                                       Item  Titel table
              *****************************************************************/
              TitelType CODE BTCallerMenuItem_BTCallerTitelTab[]=
              {
                 {0,0,RED,TRANSPARENCE,RED,TRANSPARENCE,DWT_Text,BTCallerMenu_TitelStr,osdEnd},
              };
              
              
              
              /*****************************************************************
                                        Menu Icon table
              *****************************************************************/
              
              
              
              /*****************************************************************
C51 COMPILER V9.00   OSD_BTCALLERMENU                                                      06/07/2020 11:05:42 PAGE 3   

                                       Menu  Titel table
              *****************************************************************/
              
              
              
              /*****************************************************************
                                         Item table
              *****************************************************************/
              #endif
 121          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
